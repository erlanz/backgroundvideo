{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,kBAAmB,SAAQ,SAAS;IAAjD;;QACU,iBAAY,GAA4B,IAAI,CAAC;IAqDvD,CAAC;IAnDC,KAAK,CAAC,SAAS,CAAC,OAAyB;QACvC,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;QAEnD,qCAAqC;QACrC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;YACtC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;YAC/B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC9C;QAED,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC;QACrC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,UAAU;QACd,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SAC3B;IACH,CAAC;IAED,KAAK,CAAC,WAAW;QACf,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAChC;IACH,CAAC;IAED,KAAK,CAAC,SAAS;QACb,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;IACH,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,OAA2B;QACzC,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;SACrE;IACH,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { BackgroundVideoPlugin } from './definitions';\n\nexport class BackgroundVideoWeb extends WebPlugin implements BackgroundVideoPlugin {\n  private videoElement: HTMLVideoElement | null = null;\n\n  async playVideo(options: { path: string }): Promise<void> {\n    console.log('BackgroundVideo: playVideo', options);\n    \n    // Создаем видео элемент если его нет\n    if (!this.videoElement) {\n      this.videoElement = document.createElement('video');\n      this.videoElement.style.position = 'fixed';\n      this.videoElement.style.top = '0';\n      this.videoElement.style.left = '0';\n      this.videoElement.style.width = '100%';\n      this.videoElement.style.height = '100%';\n      this.videoElement.style.objectFit = 'cover';\n      this.videoElement.style.zIndex = '-1';\n      this.videoElement.loop = true;\n      this.videoElement.muted = true;\n      document.body.appendChild(this.videoElement);\n    }\n\n    this.videoElement.src = options.path;\n    await this.videoElement.play();\n  }\n\n  async pauseVideo(): Promise<void> {\n    console.log('BackgroundVideo: pauseVideo');\n    if (this.videoElement) {\n      this.videoElement.pause();\n    }\n  }\n\n  async resumeVideo(): Promise<void> {\n    console.log('BackgroundVideo: resumeVideo');\n    if (this.videoElement) {\n      await this.videoElement.play();\n    }\n  }\n\n  async stopVideo(): Promise<void> {\n    console.log('BackgroundVideo: stopVideo');\n    if (this.videoElement) {\n      this.videoElement.pause();\n      this.videoElement.remove();\n      this.videoElement = null;\n    }\n  }\n\n  async setVolume(options: { volume: number }): Promise<void> {\n    console.log('BackgroundVideo: setVolume', options);\n    if (this.videoElement) {\n      this.videoElement.volume = Math.max(0, Math.min(1, options.volume));\n    }\n  }\n}\n"]}